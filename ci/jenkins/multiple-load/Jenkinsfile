pipeline {
    agent none
    options {
        ansiColor('xterm')
    }
    stages {
        stage('Simulation') {
            parallel {
                stage('sim1') {
                    steps {
                        build job: 'load-one',
                         parameters: [
                            agentParameter(name: 'agentName', value: 'agent1')
                         ]
                    }
                }
                stage('sim2') {
                    steps {
                        build job: 'load-two',
                        parameters: [
                            agentParameter(name: 'agentName', value: 'agent2')
                        ]
                    }
                }
            }
        }

        stage('Generating Reports') {
            agent {label 'agent2'}
            steps {
                cleanWs()
                git branch: 'master',
                    credentialsId: 'GitHubAcc',
                    url: 'https://github.com/dprymudrau/gatling-example.git'
                withCredentials([string(credentialsId: 'jcreds', variable: 'JENKINS_CREDS')]) {
                    sh "sbt -DjobNames=load-one,load-two -Djcreds=$JENKINS_CREDS 'runMain com.solvd.example.util.JenkinsUtil'"
                }
                sh "sbt 'Gatling / generateReport'"
            }
        }

        post {
         // Archive the log file.
            success {
              archiveArtifacts artifacts: 'target/gatling/**', excludes: "target/gatling/*.log"
            }
         }
    }
}